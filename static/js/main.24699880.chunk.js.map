{"version":3,"sources":["Option.js","Question.js","CssCode.js","App.js","Generator.js","index.js"],"names":["Option","props","className","type","checked","isChecked","onChange","event","changeCorrect","optionIndex","value","data","changeOption","target","placeholder","onClick","removeOption","questionIndex","Question","optionToChange","optionText","newOptions","options","updateQuestion","index","correctAnswer","title","map","option","key","correct","addOption","description","removeQuestion","cssCode","App","question1","useState","questions","setquestions","customCss","setCustomCss","rtlmode","setRtlmode","resultInput","createRef","addOptionToQuestion","newState","push","indexToRemove","filter","item","desc","useEffect","json","localStorage","getItem","JSON","parse","href","rel","question","addQuestion","id","htmlFor","text","code","forEach","length","generateCssQuiz","current","jsonData","stringify","console","log","setItem","alert","window","confirm","ref","cols","rows","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24699880.chunk.js","sourcesContent":["\nimport React from \"react\"\nimport \"./Option.css\"\nexport default function Option(props) {\n    function handleRemoveOption() {\n        props.removeOption(props.questionIndex , props.optionIndex)\n    }\n\n    function handleUpdateText(event){\n        props.changeOption(props.optionIndex , event.target.value)\n    }\n\n    function handleUpdateCorrectAnswer(event){\n        props.changeCorrect(props.optionIndex)\n    }\n\n    return (\n        <div className=\"option\">\n            <label className=\"container\">\n            <input type=\"checkbox\" checked={props.isChecked} onChange={handleUpdateCorrectAnswer} />\n            <span className=\"checkmark\"></span>\n            </label>\n            <input type=\"text\" value={props.data || \"\"} onChange={handleUpdateText} placeholder={\"option #\" + (props.optionIndex+1)}/>\n            <button onClick={handleRemoveOption} className=\"btn btn-danger\">delete</button>\n        </div>\n    )\n}","\nimport React from \"react\"\nimport \"./Question.css\"\nimport Option from \"./Option\"\n\nexport default function Question(props) {\n\n    function handleAddOption() {\n        props.addOption(props.index)\n    }\n\n    function handleRemoveQuestion() {\n        props.removeQuestion(props.index)\n    }\n    \n    function handleTitleChange(event) {\n        props.updateQuestion(props.index , event.target.value , null , null , null)\n    }\n\n    function handleDescChange(event){\n        props.updateQuestion(props.index , null , event.target.value , null , null)\n    }\n\n    function changeOption(optionToChange , optionText){\n        let newOptions = [...props.data.options]\n        newOptions[optionToChange] = optionText\n        props.updateQuestion(props.index , null , null , newOptions , null)\n    }\n    \n    function changeCorrect(correctAnswer){\n        props.updateQuestion(props.index , null , null , null , correctAnswer)\n    }\n\n    return (\n<div className=\"question\">\n  <div className=\"question-header\">\n      <textarea value={props.data.title} onChange={handleTitleChange} placeholder={`Question #${props.index + 1} title`}></textarea>\n</div>\n  <div className=\"question-body\">\n      <div className=\"options\">\n    {\n        props.data.options.map((option , index)=>{\n            return <Option\n            key = {index}\n            data={option} \n            questionIndex={props.index}\n            optionIndex={index}\n            removeOption={props.removeOption} \n            changeOption={changeOption}\n            changeCorrect = {changeCorrect}\n            isChecked = {props.data.correct === index}\n            />\n        })\n    }   \n    <button onClick={handleAddOption} className=\"btn btn-primary\">Add Option</button> \n    </div>  \n    <div className=\"description\">\n        <textarea value={props.data.description} onChange={handleDescChange} placeholder=\"enter the description here\"></textarea>\n    </div>\n    <div>\n        <button onClick={handleRemoveQuestion} className=\"btn btn-danger\">delete question</button>\n    </div>\n  </div>\n</div>\n    )\n}","const cssCode = \n`\n* {\n    padding: 0 ;\n    margin : 0 ;\n    box-sizing: border-box;\n  }\n  body {\n    font-family: sans-serif ;\n  }\n  \n  fieldset {\n    border: 1px solid #ccc;\n    margin: 2rem 0;\n  }\n  \n  fieldset legend {\n    font-weight: 700;\n  }\n  \n  .answer__item {\n    background-color: rgb(233, 233, 233);\n    display: block;\n    position: relative;\n    cursor: pointer;\n    padding: 1.5rem 1rem;\n    margin: 0.5rem;\n    box-shadow: #ccc 1px 1px 1px;\n    transition: background .5s ease;\n  }\n  \n  /* Hide Radio Buttons and Submit Button */\n  input[type=\"radio\"] {\n    display: none;\n  }\n  button[type=\"reset\"]{\n    background : rgb(233, 233, 233) ;\n    border: 1px solid #ccc ;\n    padding: 10px 5px ;\n  }\n  /* Any correct answer on any answered question, highlight in light green */\n  :valid .answer__item--is-correct {\n    background-color: rgb(234, 226, 116);\n    transition : all .5s ease ;\n  }\n  \n  /* Show any extra explanatory text */\n  .answer__reveal-text {\n    display: none;\n    margin-top: 15px;\n  }\n  :valid .answer__reveal-text {\n    display: block;\n  }\n  \n  /* Any chosen answer, highlight in red */\n  :checked + .answer__item {\n    color: #ffffff;\n    background-color: #9b2626;\n    transition: all .5s ease ;\n  }\n  \n  /* Any correctly chosen answer, highlight in bright green */\n  :checked + .answer__item--is-correct {\n    background-color: #3db540;\n    transition: all .5s ease;\n  }\n  \n  /* Show the icon for the selected answer */\n  :checked + .answer__item .answer__icon {\n    display: inline-block;\n  }\n  \n  /* prevent chosing another answer once chosen */\n  :valid {\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n  :valid + .answer__item {\n    pointer-events: none;\n  }\n  \n  /* keep track of score */\n  form {\n    counter-reset: quiz-score;\n  }\n  :checked + .answer__item--is-correct {\n    counter-increment: quiz-score;\n  }\n  .score:after {\n    content: counter(quiz-score) \"/\" attr(data-question-count);\n  }\n  \n  /* show score once quiz has been completed */\n  .message {\n    display: none;\n    text-align: center;\n  }\n  form:valid .message {\n    display: block;\n  }\n  .cleardiv {\n    text-align: center;\n  }\n`\nexport default cssCode ;","import React , {useState , useEffect, createRef} from 'react'\nimport Question from \"./Question\"\nimport generateCssQuiz from './Generator'\nimport cssCode from \"./CssCode\"\nfunction App() {\n  const STORAGE_KEY = \"QuizMakerDB\"\n\n  const question1 = {\n    title:\"\" ,\n    options:[\"\" , \"\" , \"\" , \"\"],\n    description:\"\" , \n    correct : 0\n  }\n  \n  const [questions, setquestions] = useState([question1])\n  const [customCss , setCustomCss] = useState(cssCode)\n  const [rtlmode , setRtlmode] = useState(false)\n\n  const resultInput = createRef()\n  // load data once page loaded from local storage\n  useEffect(() => {\n    const json = localStorage.getItem(STORAGE_KEY)\n    if (!(json === null || json === \"\")){\n      const data = JSON.parse(json)\n      setquestions(data.questions)\n      setRtlmode(data.rtlmode)\n      setCustomCss(data.customCss)\n    }\n  }, [])\n\n  function addOptionToQuestion(index){\n    const newState = [...questions] \n    newState[index].options.push(\"\")\n    setquestions(newState)\n  }\n\n  function addQuestion(){\n    const newState = [...questions]\n    newState.push(question1)\n    setquestions(newState)\n  }\n\n  function removeQuestion(indexToRemove) {\n    let newState = [...questions]\n    newState = newState.filter((item , index)=>{\n      return index !== indexToRemove\n    })\n    setquestions(newState)\n  }\n\n  function removeOption(questionIndex , optionIndex){\n    let newState = [...questions]\n    newState[questionIndex].options = newState[questionIndex].options.filter((value , index)=>{\n      return optionIndex !== index\n    })\n    setquestions(newState)\n  }\n\n  function updateQuestion(index , title , desc , options , correct){\n    let newState = [...questions]\n    if (title !== null) newState[index].title = title\n    if (desc !== null) newState[index].description = desc\n    if (options !== null) newState[index].options = options\n    if (correct !== null) newState[index].correct = correct\n    setquestions(newState)\n  }\n\n  function handleClickData() {\n    const jsonData = JSON.stringify(questions)\n    resultInput.current.value = jsonData\n  }\n\n  function handleClickSave() {\n    const data = {\n      questions : questions , \n      rtlmode : rtlmode , \n      customCss : customCss\n    }\n    const json = JSON.stringify(data)\n    console.log(json)\n    localStorage.setItem(STORAGE_KEY , json)\n    alert(\"code saved to browser successfully!\")\n  }\n\n  function handleClearSaved(){\n    if (window.confirm(\"are you sure about that?\")){\n      localStorage.setItem(STORAGE_KEY , \"\")\n      setquestions([question1])\n      resultInput.current.value = \"\"\n    }\n  }\n\n  function handleCodeClick(){\n    const code = generateCssQuiz(questions , rtlmode , customCss)\n    resultInput.current.value = code\n  }\n\n  function handleRtlChange() {\n    setRtlmode(!rtlmode)\n  }\n\n  function handleCssChange(event) {\n    const text = event.target.value ;\n    if (text === \"\"){\n      setCustomCss(cssCode)\n    }\n    else {\n      setCustomCss(text);\n    }\n  }\n\n  return (\n    <div className=\"main\">\n      <div className=\"header\">\n      <h1>Pure Css Quiz Creator</h1>\n      <p>make any multiple choice quiz without using any JS!</p>\n      <p>created by <a href=\"https://chortak.blog.ir\" target=\"_blank\" rel=\"noreferrer\"> Mohsen Farajollahi </a></p>\n      </div>\n      {\n        questions.map((question , index)=> {\n         return <Question data={question} index={index} addOption={addOptionToQuestion}\n         removeQuestion={removeQuestion} removeOption={removeOption} updateQuestion={updateQuestion}\n         key={index}\n         />\n        })\n      }\n      <button onClick={()=>{addQuestion()}} className=\"btn btn-primary\">+ Add Question</button>\n      <div className=\"alter\">\n        <div>\n          <input type=\"checkbox\" id=\"isrtlenabled\" onChange={handleRtlChange} checked={rtlmode}/>\n          <label htmlFor=\"isrtlenabled\">right-to-left?</label>\n        </div>\n        <textarea placeholder=\"Custom Css Code\" onChange={handleCssChange} value={customCss === cssCode ? \"\" : customCss} className=\"textBox\"></textarea>\n      </div>\n      <div className=\"action-panel\">\n        <button onClick={handleCodeClick} className=\"btn btn-primary\">Code</button>\n        <button onClick={handleClickData} className=\"btn\">Data</button>\n        <button onClick={handleClickSave} className=\"btn btn-green\">Save</button>\n        <button onClick={handleClearSaved} className=\"btn btn-danger\">Clear Saved</button>\n      </div>\n      <textarea ref={resultInput} cols=\"60\" rows=\"10\" className=\"textBox\" placeholder=\"get Code/Data from here\"></textarea>\n    </div>\n  );\n\n}\n\nexport default App;\n","export default function generateCssQuiz(questions , rtlmode , customCss){\n    let code = \"\"\n    code += `<style>${customCss}</style>`\n    code += `<form method=\"POST\" class=\"is-not-results\" autocomplete=\"off\" ${rtlmode?'dir=\"rtl\"' : '' }>`\n    questions.forEach((question , questionIndex) => {\n        code += `\n        <fieldset>\n        <legend>${questionIndex+1}. ${question.title}</legend>\n        <div class=\"answers\">`\n        question.options.forEach((option , optionIndex) => {\n            code += `            \n            <div class=\"answer\">\n                <input type=\"radio\" name=\"answers[${questionIndex}]\" id=\"answer-${questionIndex}-${optionIndex}\" value=\"1\" required>\n                <label for=\"answer-${questionIndex}-${optionIndex}\" class=\"answer__item ${question.correct === optionIndex ? 'answer__item--is-correct' : '' }\">\n                    ${optionIndex+1}. ${option}   \n                    ${question.correct === optionIndex ? `<span class=\"answer__reveal-text\">${question.description}</span>` : \"\"}\n                </label>\n            </div>`\n        });\n        code += `\n        </div>\n        </fieldset>\n        `\n    });\ncode += `\n<div class=\"message\">\n    <p>${\n        rtlmode?\n        `امتیاز شما: <span class=\"score\" data-question-count=\"${questions.length}\"></span></p>`:\n        `Your Score: <span class=\"score\" data-question-count=\"${questions.length}\"></span></p>`\n    }\n</div>\n<div class=\"cleardiv\">\n    <button type=\"reset\">${rtlmode?\"پاک کردن پاسخ‌ها\":\"Clear answers\"}</button>\n</div>\n</form>`\nreturn code ;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}